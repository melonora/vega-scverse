---
id: https://w3id.org/scverse/vega-scverse/encode
name: vega-scverse-encode
version: 0.1.0
title: vega-scverse-encode
description: |-
  Vega like specification for the encodings used to specify the visuals representation of marks.
license: BSD-3
see_also:
  - https://scverse.github.io/vega-scverse

prefixes:
  vega_scverse: https://w3id.org/scverse/vega-scverse/
  linkml: https://w3id.org/linkml/
  orcid: https://orcid.org/
default_prefix: vega_scverse
default_range: string

imports:
  - linkml:types
  - misc
  - slots

created_on: "2025-06-01"
created_by: orcid:0000-0003-1666-5421

classes:
############################### Encoders
  ImageEncode:
    description: |-
      A set of visual encoding properties that determine the position and appearance of a 'raster_image' mark. 
      In Vega, there are three primary property sets: enter, update, exit. The enter properties are evaluated when data 
      is processed for the first time and a mark instance is newly added to a scene and are the only properties 
      supported for a 'raster_image' mark.
    attributes:
      enter:
        description: |-
          Enter properties that are evaluated when image data is processed for the first time and the raster_image mark 
          is newly added to a scene.
        range: ImageEncodeEnter
        required: true

  LabelEncode:
    description: |-
      A set of visual encoding properties that determine the position and appearance of a 'raster_label' mark. 
      In Vega, there are three primary property sets: enter, update, exit. The enter properties are evaluated when data 
      is processed for the first time and a mark instance is newly added to a scene. The update properties are evaluated 
      for all existing (non-exiting) mark instances. The exit properties are evaluated when the data backing a mark is 
      removed, and so the mark is leaving the visual scene. However, in this specification we currently only support
      enter and update property sets for a 'raster_label' mark.
    attributes:
      enter:
        description: |-
          Enter properties that are evaluated when label data is processed for the first time and the raster_label mark 
          is newly added to a scene.
        range: LabelEncodeEnter
        required: true
      update:
        description: |-
          Update properties that are evaluated for all existing (non-exiting) mark instances. Typically included when 
          no random coloring is being used for the labels.
        range: MarkEncodeUpdate
        required: false

  SymbolEncode:
    description: |-
      A set of visual encoding properties that determine the position and appearance of a 'symbol' mark. 
      In Vega, there are three primary property sets: enter, update, exit. The enter properties are evaluated when data 
      is processed for the first time and a mark instance is newly added to a scene. The update properties are evaluated 
      for all existing (non-exiting) mark instances. The exit properties are evaluated when the data backing a mark is 
      removed, and so the mark is leaving the visual scene. However, in this specification we currently only support
      enter and update property sets for a 'symbol' mark.
    attributes:
      enter:
        description: |-
          Enter properties that are evaluated when points data is processed for the first time and the points mark 
          is newly added to a scene.
        range: PointsEncodeEnter
        required: true
      update:
        description: |-
          Update properties that are evaluated for all existing (non-exiting) mark instances. Usually defined if the 
          user specified a color to be used for the PointsMark.
        range: MarkEncodeUpdate
        required: false

  PathEncode:
    description: |-
      A set of visual encoding properties that determine the position and appearance of a 'path' mark. 
      In Vega, there are three primary property sets: enter, update, exit. The enter properties are evaluated when data 
      is processed for the first time and a mark instance is newly added to a scene. The update properties are evaluated 
      for all existing (non-exiting) mark instances. The exit properties are evaluated when the data backing a mark is 
      removed, and so the mark is leaving the visual scene. However, in this specification we currently only support
      enter and update property sets for a 'path' mark.
    attributes:
      enter:
        description: |-
          Enter properties that are evaluated when points data is processed for the first time and the points mark 
          is newly added to a scene.
        range: PathEncodeEnter
        required: true
      update:
        description: |-
          Update properties that are evaluated for all existing (non-exiting) mark instances. Usually defined if the 
          user specified a color to be used for the PointsMark.
        range: MarkEncodeUpdate
        required: false

  TextEncode:
    description: |-
      A set of visual encoding properties that determine the position and appearance of a text mark.
      In Vega, there are three primary property sets: enter, update, exit. The enter properties are evaluated when data 
      is processed for the first time and a mark instance is newly added to a scene and are the only properties 
      supported for a text mark.
    attributes:
      enter:
        description: |-
          Enter properties that are evaluated when data for a text mark is processed for the first time and the 
          group mark is newly added to a scene.
        range: TextEncodeEnter
        required: true

  GroupEncode:
    description: |-
      A set of visual encoding properties that determine the position of a group mark, which are used for subplots. 
      In Vega, there are three primary property sets: enter, update, exit. The enter properties are evaluated when data 
      is processed for the first time and a mark instance is newly added to a scene and are the only properties 
      supported for a group mark.
    attributes:
      enter:
        description: |-
          Enter properties that are evaluated when data for a group mark is processed for the first time and the 
          group mark is newly added to a scene.
        range: GroupEncodeEnter
        required: true

############################### EncodeEnter
  ImageEncodeEnter:
    description: |-
      Enter properties that are evaluated when image data is processed for the first time and the raster_image mark is 
      newly added to a scene.
    attributes:
      opacity:
        description: |-
          The opacity of the image mark.
        range: OpacityObject
      fill:
        description: |-
          The colormap by which to show the intensity value of the image or channel.
        range: ColorItem
        multivalued: true
        required: true

  LabelEncodeEnter:
    description: |-
      Enter properties that are evaluated when label data is processed for the first time and the raster_image mark is 
      newly added to a scene.
    attributes:
      stroke:
        description: |-
          The color of the outline of each individual label.
        multivalued: true
        exact_cardinality: 1
        range: ColorItem
        required: true
      fill:
        description: |-
          The color fill of each individual label.
        multivalued: true
        exact_cardinality: 1
        any_of:
          - range: ColorItem
          - range: RandomRGBSignal
        required: true
      fillOpacity:
        description: |-
          Opacity value for the label fill between 0 and 1.
        range: OpacityObject
        required: true
      strokeOpacity:
        description: |-
          Opacity value for the label stroke between 0 and 1.
        range: OpacityObject
        required: true
      strokeWidth:
        description: |-
          The width of the label outlines in pixels.
        range: PositiveFloatObject
        required: true

  PointsEncodeEnter:
    description: |-
      Enter properties that are evaluated when points data is processed for the first time and the raster_image mark is 
      newly added to a scene.
    attributes:
      x:
        description: |-
          The x coordinates
        range: AxisItem
        required: true
      y:
        description: |-
          The y coordinates
        range: AxisItem
        required: true
      stroke:
        description: |-
          The color of the outline of each individual point.
        any_of:
          - range: ColorItem
          - range: RGBHexItem
        required: true
      fill:
        description: |-
          The color fill of each individual point.
        any_of:
          - range: ColorItem
          - range: RGBHexItem
        required: true
      fillOpacity:
        description: |-
          Opacity value for the point fill between 0 and 1.
        range: OpacityObject
        required: true
      strokeOpacity:
        description: |-
          Opacity value for the point outlines between 0 and 1.
        range: OpacityObject
      strokeWidth:
        description: |-
          The width of the point outlines in pixels.
        range: PositiveFloatObject
      size:
        description: |-
          The points bounding box area size (typographic points are 1/72 in.).
        range: PositiveFloatObject
        required: true
      shape:
        description: |-
          The type of shape. In this case `circle`.
        range: CircleShapeObject
        required: true

  PathEncodeEnter:
    description: |-
      Enter properties that are evaluated when shapes data is processed for the first time and the raster_image mark is 
      newly added to a scene.
    attributes:
      x:
        description: |-
          The x coordinates
        range: AxisItem
        required: true
      y:
        description: |-
          The y coordinates
        range: AxisItem
        required: true
      fill:
        description: |-
          The color fill of each individual label.
        any_of:
          - range: ColorItem
          - range: RGBHexItem
        required: true
      fillOpacity:
        description: |-
        slot_uri: opacityValueSlot
        required: true

  TextEncodeEnter:
    description: |-
      Enter properties that are evaluated when data for a text mark is processed for the first time and the 
      group mark is newly added to a scene.
    attributes:
      x:
        range: PositionItem
        required: true
      y:
        range: PositionItem
        required: true
      text:
        range: TextItem
        required: true
      align:
        description: |-
          The horizontal text alignment relative to the text anchor point.
        range: HorizontalAlignEnum
        required: true
      angle:
        description: |-
          The rotation angle of the text in degrees.
        range: float
        minimum_value: 0
        maximum_value: 359
      baseline:
        description: |-
          The baseline attribute specifies the vertical alignment (baseline) of the text relative to its y-coordinate.
        range: BaseLineEnum
        required: true
      font:
        range: FontItem
        required: true
      fontSize:
        range: FontSizeItem
        required: true
      fontWeight:
        range: FontWeightItem
        required: true
      fontStyle:
        range: FontStyleItem
        required: true
      fill:
        description: |-
          The color of the text
        range: RGBHexItem
        required: true
      fillOpacity:
        description: |-
          Opacity of the text.
        slot_uri: opacityValueSlot

  GroupEncodeEnter:
    description: |-
      Encoding for the position, width and height of a group mark.
    attributes:
      x:
        description: |-
          Placing of the group mark along the x axis (width of the complete charter). The origin
          is on the left side.
        range: float
        required: true
      y:
        description: |-
          Placing of the group mark along the y axis (height of the complete charter). The origin
          is on the top side.
        range: float
        required: true
      width:
        description: |-
          The width of the mark in pixels.
        range: float
        required: true
      height:
        description: |-
          The height of the mark in pixels.
        range: float
        required: true
        

############################### EncodeUpdate
  MarkEncodeUpdate:
    description: |-
      Update properties that are evaluated for all existing (non-exiting) mark instances.
    attributes:
      fill:
        description: Update of fill color based on a test condition and optional a backup static fill value
        # TODO: exactly_one_of not properly implemented on linkml side.
        any_of:
          - range: ConditionalFillUpdate
          - range: RGBHexItem
          - range: NAColorUpdate
          - range: ConditionalColorUpdate
        multivalued: true

  ConditionalFillUpdate:
    description: |-
      Update color based on test condition. This is following an 'if-then-else' style chain of production rules. If
      no else is specified, then the property value evaluates to 'null' or similar value.
    attributes:
      test:
        description: |-
          The condition to test on, e.g. 'isValid(datum.value). MUST be a valid expression in Vega. See also:
          https://vega.github.io/vega/docs/expressions/ and it MUST evaluate to either 'true' or 'false'.
        range: string
        required: true
      scale:
        description: |-
          The scale to use for applying the fill color. This scale MUST exist in the view configuration Scales array.
        pattern: "^color_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
        required: true
      field:
        description: |-
          The column that serves as data input, in the test condition this corresponds to 'datum'.
        range: string
        required: true

  NAColorUpdate:
    description: |-
      Update the color of a mark glyph if its value is not valid.
    attributes:
      test:
        description: |-
          The condition to test on, e.g. '!isValid(datum.value). MUST be a negating is valid expression in Vega. 
          See also: https://vega.github.io/vega/docs/expressions/ and it MUST evaluate to either 'true' or 'false'.
        pattern: "!isValid\\([^)]*\\)"
        required: true
      value:
        description: |-
          The color as RGB hex string.
        pattern: "^#([A-Fa-f0-9]{6})$"
        required: true

  ConditionalColorUpdate:
    description: |-
      Update the color if a value is above or below a given threshold.
    attributes:
      test:
        description: |-
          The condition to test on, e.g. 'datum.instance_id) < 3.0'. MUST be an expression starting with 
          datum.<column_name> then a space followed by <=,>=,< or> a space again and then any float or integer value.
        pattern: "^datum\\.[A-Za-z_][A-Za-z0-9_]*\\s*(?:<=|>=|<|>)\\s*-?\\d+(?:\\.\\d+)?$"
        required: true
      value:
        description: |-
          The color as RGB hex string.
        pattern: "^#([A-Fa-f0-9]{6})$"
        required: true
