---
id: https://w3id.org/scverse/vega-scverse/marks
name: vega-scverse-misc
version: 0.1.0
title: vega-scverse-misc
description: |-
  Vega like specification for miscellaneous classes used in view configurations for the scverse visualization ecosystem.
license: BSD-3
see_also:
  - https://scverse.github.io/vega-scverse

prefixes:
  vega_scverse: https://w3id.org/scverse/vega-scverse/
  linkml: https://w3id.org/linkml/
  orcid: https://orcid.org/
default_prefix: vega_scverse
default_range: string

imports:
  - linkml:types
  - linkml_slots

created_on: "2025-06-01"
created_by: orcid:0000-0003-1666-5421

classes:
  PositionItem:
    description: |-
      X or y position of an item in pixels.
    attributes:
      value:
        description:
          The coordinate value.
        range: float
        required: true

  TextItem:
    description: |-
      Text to be displayed. Value is an array where each element corresponds to 1 line.
    attributes:
      value:
        description: |-
          The value for text.
        range: string
        multivalued: true
        required: true

  baselineItem:
    description: |-
      The  vertical alignment of the text relative to its y-coordinate.
    attributes:
      value:
        description: |-
          The value for the text baseline.
        range: BaseLineEnum
        required: true

  FontItem:
    description: |-
      The  name of the font to be used.
    attributes:
      value:
        description: |-
          The value for font name.
        range: string
        required: true

  FontSizeItem:
    description: |-
      Fontsize of text in pixels.
    attributes:
      value:
        description: |-
          Font size value.
        minimum_value: 0
        range: float
        required: true

  FontWeightItem:
    description: |-
      Font weight of the text
    attributes:
      value:
        description: |-
          The font weight value.
        range: FontWeightEnum
        required: true

  FontStyleItem:
    description: |-
      Fontstyle of the text.
    attributes:
      value:
        description: |-
          The fontstyle value.
        range: FontStyleEnum
        required: true

  RGBHexItem:
    description: |-
      RGB value represented by a hexadecimal string value.
    attributes:
      value:
        description: |-
          The RGB hex string value.
        slot_uri: rgbHexSlot

  RandomRGBSignal:
    description: |-
      RGB value represented by a hexadecimal string value.
    attributes:
      signal:
        description: |-
          Signal creating random RGB color for labels in a label raster.
        equals_string: "rgb(random()*255, random()*255, random()*255)"
        ifabsent: string(rgb(random()*255, random()*255, random()*255))

  Title:
    description: |-
      The title directive adds a descriptive title to a chart. Similar to scales, axes, and legends, a title can be 
      defined at the top-level of a specification or as part of a group mark.
    attributes:
      text:
        description: |-
          The title text. Either a string or an array of strings. The latter specifies multiple lines of text.
        range: string
        multivalued: true
        required: true
      anchor:
        description: |-
          The anchor position for placing the title and subtitle. One of start, middle (the default), or end.
        range: AnchorEnum
        required: true
      orient:
        description: |-
          The orientation of the title relative to the chart.
        range: OrientEnum
        required: true
      baseline:
        description: |-
          The baseline attribute specifies the vertical alignment (baseline) of the text relative to its y-coordinate.
        range: BaseLineEnum
        required: true
      color:
        description: |-
          Text color of the title text.
        slot_uri: rgbaHexSlot
        required: true
      font:
        description: |-
          Font name of the title text.
        range: string
        required: true
      fontSize:
        description: |-
          Font size in pixels of the title text.
        range: float
        minimum_value: 0
        required: true
      fontStyle:
        description: |-
          Fontstyle of the title.
        range: FontStyleEnum
        required: true
      fontWeight:
        description: |-
          Font weight of the title
        range: FontWeightEnum
        required: true

  Padding:
    description: |-
      padding defines the amount of space (in pixels) to reserve between the edge of the chart container and the inner 
      view area where data marks are rendered. It acts as an internal margin that ensures visual elements like axes, 
      titles, and legends don't touch or overflow the chart's outer boundaries.
      When combined with "autosize": {"type": "fit", "contains": "padding"}, this padding is included within the chart's 
      specified width and height, and the inner view is resized accordingly to preserve layout integrity. If padding
      is defined with this class. This class should at least have one attribute defined.
    # TODO linkml does not currently support json like minProperties to state that at least one attribute would be
    # required.
    attributes:
      left:
        description: |-
          The value for padding at the left side of the chart in pixels.
        range: float
        required: false
      top:
        description: |-
          The value for padding at the top side of the chart in pixels.
        range: float
        required: false
      right:
        description: |-
          The value for padding at the right side of the chart in pixels.
        range: float
        required: false
      bottom:
        description: |-
          The value for padding at the bottom side of the chart in pixels.
        range: float
        required: false

  ColorItem:
    description: |-
      A single color item definition specifying the scale on which the color is based and the value / field
      to which to apply the color.
    attributes:
      scale:
        description: |-
          The color scale.
        pattern: "^color_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
        required: true
      field:
        description: |-
          The value or field to which to apply the color.
        range: string
        required: true

  PositiveFloatObject:
    description: |-
      An object with an attribute value with a positive float as range. Useful for example to note the width of an 
      outline.
    attributes:
      value:
        # TODO do conversion in spatialdata plot from points to pixels. 1 point 1/72 inch
        description: The actual width value in  pixels
        range: float
        minimum_value: 0
        required: true

  CircleShapeObject:
    description: |-
      Circle shape definition used in symbol mark.
    attributes:
      value:
        description: |-
          Type of shape, in this case circle.
        equals_string: circle
        ifabsent: string(circle)

  AxisItem:
    description: |-
      A axis item which for a mark can define the scale and field used for the axis definition in the mark.
    attributes:
      scale:
        description: |-
          The scale on which the axis is based.
        pattern: "^[XY]_scale(_\\d+)?$"
        required: true
      field:
        description: |-
          The mark's field value transformed by the scale. Either x or y.
        range: AxisEnum
        required: true

  OpacityObject:
    description: |-
      The opacity for a given mark or label or other item to be rendered.
    attributes:
      value:
        description: |-
          The actual opacity value
        range: float
        minimum_value: 0
        maximum_value: 1
        required: true

  HorizontalAlignObject:
    description: |-
      Object indicating the horizontal alignment.
    attributes:
      value:
        description: |-
          The actual value for alignment.
        range: HorizontalAlignEnum
        required: true

  BaseLineObject:
    description: |-
      The vertical alignment of the text relative to its y-coordinate.
    attributes:
      value:
        description: |-
          The actual value for vertical alignment.
        range: BaseLineEnum
        required: true

enums:
  FontStyleEnum:
    description: |-
      Possible font styles. These are all the possible css font styles. These include styles,
      weights, variants and stretch. In case of font weights (100-900), it represents a unitless numeric scale 
      standardized in CSS to represent font weight.
    see_also:
      - https://www.w3.org/Style/Examples/007/fonts.en.html#font-style
    permissible_values:
      normal: Regular CSS font style with a font weight of 400.
      italic: A cursive CSS font style.
      bold: |-
        A font with a thicker stroke weight relative to a regular font used to emphasize the text. It has a font weight
        of 700.
      100: The thinnest font weight available for a given font family.
      200:
      300:
      500:
      600:
      800:
      900: The thickest font weight available for a given font family.
      small-caps: |-
        Uppercase letterforms designed at approximately the same height and weight as the font's lowercase letters.
      ultra-condensed: |-
        The most horizontally narrow font stretch. The visual representation of each character is narrowed to its most
        compressed form.
      extra-condensed:
      condensed:
      semi-condensed:
      semi-expanded:
      expanded:
      extra-expanded:
      ultra-expanded: |-
        The most horizontally expanded font stretch. The visual representation of each character is expanded to its most
        expanded form.
  FontWeightEnum:
    description: |-
      Possible font weight values. In case of font weights (100-900), it represents a unitless numeric scale 
      standardized in CSS to represent font weight.
    permissible_values:
      100: The thinnest font weight available for a given font family.
      200:
      300:
      400:
      500:
      600:
      700:
      800:
      900: The thickest font weight available for a given font family.
      bold: Font with a font weight of 700.
      normal: Font with a font weight of 400.
  AxisEnum:
    description: |-
      Possible values for the type of
    permissible_values:
      x: x-axis of the visualization. Typically referring to the horizontal axis.
      y: y-axis of the visualization. Typically referring to the vertical axis.
  OrientEnum:
    description: |-
      The position relative to the chart for either a (sub)title or axis.
    permissible_values:
      left: Place a y-axis or title along the left side of the chart.
      right: Place a y-axis or title along the right side of the chart.
      top: Place an x-axis or title along the top side of the chart.
      bottom: Place an x-axis or title along the bottom side of the chart.
  BaseLineEnum:
    description: |-
      The possible vertical alignments of the text relative to its y-coordinate.
      See the link for an explanation of the meaning of EM square. We do not currently
      support "line-bottom" and "line-top".
    see_also: http://designwithfontforge.com/en-US/The_EM_Square.html
    permissible_values:
      top: The highest part of all characters aligns with the y-coordinate.
      middle: The middle of the fonts EM square aligns with the y-coordinate.
      bottom: The bottom of all characters combined aligns with the y-coordinate.
      alphabetic: |-
        aligns the main body of lowercase letters (like a, e, x) so that their base sits exactly on the anchor line 
        (y coordinate). Descenders on letters like g, p, or y extend below this line.
  HorizontalAlignEnum:
    description: |-
      The horizontal text alignment relative to the anchor point of the text. One of left, center, or right.
    permissible_values:
      left: The anchor point of the text is left of the text.
      center: The anchor point of the text is at the center of the text.
      right: The anchor point of the text is right of the text.
  AnchorEnum:
    description: |-
      The possible values for the anchor of a title or subtitle.
    permissible_values:
      start: The text is left aligned with the horizontal axis.
      middle: The text is center aligned with the horizontal axis.
      end: The text is right aligned with the horizontal axis.
