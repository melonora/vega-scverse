---
id: https://w3id.org/scverse/vega-scverse/scales
name: vega-scverse-scales
version: 0.1.0
title: vega-scverse-scales
description: |-
  Vega like specification for scales mapping a data domain to a visual range, whether axis or color in
  the scverse plotting / visualization ecosystem.
license: BSD-3
see_also:
  - https://scverse.github.io/vega-scverse

prefixes:
  vega_scverse: https://w3id.org/scverse/vega-scverse/
  linkml: https://w3id.org/linkml/
  orcid: https://orcid.org/
default_prefix: vega_scverse
default_range: string

imports:
  - linkml:types

created_on: "2025-06-01"
created_by: orcid:0000-0003-1666-5421

classes:
#  Scales:
#    description: |-
#      Vega like definition for scales which specifies a collection of mappings from a data domain
#      (e.g., numbers, categories, dates) to a visual range (e.g., position on the screen, color spectrum, size).
#    attributes:
#      scales:
#        multivalued: true
#        any_of:
#          - range: AxisScale
#          - range: CategoricalColorScale
#          - range: ContinuousColorScale

  Scale:
    abstract: true
    description: |- 
      Base class for vega like scales which map from a data domain to a visual range, be it axis or color.
    attributes:
      name:
        description: |-
          Name of the scale. Is used to refer to the scale in the rest of the view configuration. For scales used for
          axes typically `Y_scale` or `X_scale` optionally followed by `_n` where n stands for the index of the subplot.
          In case of a color mapping it is `color_` followed by a pseudo UUID.
        identifier: true
        required: true
        range: string
      type:
        description: |-
          The type of scale which is a description of what kind of mapping is performed between data domain and 
          visual range, e.g. `linear`.
        required: true
        range: ScaleEnum

  AxisScale:
    is_a: Scale
    description: A vega like scale specifically for mapping from a data domain to an axis range.
    slot_usage:
      name:
        description: |-
          `Y_scale` or `X_scale` optionally followed by `_n` where n stands for the index of the subplot.
        pattern: "^[XY]_scale(_\\d+)?$"
      type:
        description: Only linear is supported for an `AxisScale` for now.
        equals_string: linear
        ifabsent: string(linear)
    attributes:
      domain:
        description: |-
          The set of input data values that the scale maps from. In the case of a linear scale,
          this should be a two-element list representing the minimum and maximum numeric values
          to be transformed. For example, [512.0, 0.0] maps the data range from 512 (top) to 0 (bottom),
          which is typical for Y-axis scales in image coordinate systems where the origin is at the top-left.
        multivalued: true
        required: true
        range: float
        exact_cardinality: 2
      range:
        description: |-
          Defines the target visual dimension for the axis scale’s output range. Must be either 'width' for an X-axis 
          scale or 'height' for a Y-axis scale. These keywords refer to the pixel extent of the plotting area, not the 
          full canvas. The plotting area is the region where data marks are rendered, and its dimensions are typically 
          defined by the top-level 'width' and 'height' properties of a Vega specification. For example, setting 
          "range": "height" in a Y-axis scale maps the scale’s domain to pixel positions from top to bottom within the 
          plot area. This is commonly used to align data values with positional axes in coordinate-based visualizations.
        required: true
        range: AxisRangeEnum

  ColorScale:
    abstract: true
    description: |-
      Abstract class to map a data domain to a color range. Not to be used on its own.
    is_a: Scale
    slot_usage:
      name:
        description: |-
          color followed by '_pseudoUUID' used to refer to this scale elsewhere in the view configuration.
        pattern: "^color_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"

  ContinuousColorScale:
    is_a: ColorScale
    description: A vega like scale specifically for mapping from a continuous data domain to a visual color range.
    slot_usage:
      type:
        description: Only linear is supported for an `ContinuousColorScale` for now.
        equals_string: linear
        ifabsent: string(linear)
    attributes:
      domain:
        description: |- 
          The data used as a source for the visual color range
        required: true
        range: ContinuousColorDomain
      range:
        description: |-
          The range to which to map the data domain. In this case one that refers to a colormap range.
        required: true
        range: ContinuousColorMapRange

  CategoricalColorScale:
    is_a: ColorScale
    description: A scale to map a discrete data domain to discrete colors
    slot_usage:
      type:
        equals_string: ordinal
        ifabsent: string(ordinal)
    attributes:
      domain:
        description: |-
          The data domain as a list of discrete string values.
        multivalued: true
        required: true
        range: string
      range:
        description: |-
          List of RGB colors as hexadecimal strings
        multivalued: true
        required: true
        pattern: "^#(?:[0-9a-fA-F]{3}|[0-9a-fA-F]{6})$"

  ContinuousColorDomain:
    description: |-
      A data domain or source for a ContinuousColorScale.
    attributes:
      data:
        description: |-
          The identifier of the particular data object in the data array to which the color mapping in 
          ContinuousColorScale must be applied. In Vega this is only defined when the type of Scale is
          ordinal, but we deviate from that.
        required: true
        pattern: "^.*_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      field:
        description: |-
          If the data source is a table, then the field is the column within the table that is used as 
          a source for the color mapping. In case of raster data with a single channel, the field equals
          "value" and if multichannel raster data it is the name or index of the image channel.
        required: true
        range: string


  ContinuousColorMapRange:
    description: |-
      Color scheme reference for a color palette.
    attributes:
      scheme:
        # TODO: check which colormaps are supported across all viewers.
        description: |-
          The name of the color scheme to use or an array of color values.
        required: true
        range: string
      count:
        description: |-
          The number of colors to use in the scheme.
        required: true
        range: integer

enums:
  ScaleEnum:
    permissible_values:
      linear: Maps continuous numeric data to a continuous range.
      ordinal: Maps discrete values (categories) to distinct values in the output range.
  AxisRangeEnum:
    permissible_values:
      height: Referring to the height of the plotting area.
      width: Referring to the width of the plotting area.
        
